---
# tasks file for vim
- name: -基础依赖安装--
  yum:
    name: "{{ item }}"
    state: latest
  loop:
    - git
    - ctags
    - ncurses
    - ncurses-devel
    - gcc
    - gcc-c++
    - readline-devel
    - bzip2
    - openssl
    - openssl-devel
    - 'zlib*'
    - libffi-devel
    - python-devel
    - 'perl-ExtUtils*'


- name: 下载Cmake
  unarchive:
    src: https://cmake.org/files/v3.12/cmake-3.12.0.tar.gz
    dest: /tmp
    remote_src: yes
- name: 安装Cmake
  shell: "cd cmake-3.12.0 && ./bootstrap && make && make install"
  args:
    chdir: /tmp

- name: 下载Python{{ python_version }}版本
  unarchive:
    src: https://www.python.org/ftp/python/{{ python_version }}/Python-{{ python_version }}.tgz
    dest: /tmp
    remote_src: yes

- name: 安装Python{{ python_version }}
  shell: "cd Python-{{ python_version }} && ./configure && make && make install"
  args:
    chdir: /tmp
- name: 安装python语法库Jedi
  shell: "pip3.{{ python_version.split('.',2)[1] }} install jedi pylint"

- name: 下载lua5.3.5版本
  unarchive:
    src: http://www.lua.org/ftp/lua-5.3.5.tar.gz
    dest: /tmp
    remote_src: yes

- name: 安装lua5.3.5
  shell: "cd lua-5.3.5 && make linux test && make install"
  args:
    chdir: /tmp

- name: 准备vim环境
  unarchive:
    src: ftp://ftp.vim.org/pub/vim/unix/vim-8.1.tar.bz2
    dest: /tmp
    remote_src: yes

- name: 安装vim
  shell: "cd vim81 && ./configure --with-features=huge --enable-multibyte --with-ruby-command=ruby   --enable-pythoninterp=yes --enable-gui=gtk2 --enable-cscope --enable-luainterp --with-lua-prefix=/usr/local --with-python-config-dir={{ python_config_dir }} --enable-fontset --enable-rubyinterp=dynamic --enable-perlinterp=yes --enable-python3interp=yes --with-python3-config-dir={{ python3_config_dir }} && make && make install"
  args:
    chdir: /tmp

- name: -安装powerline字体-
  git:
    repo: 'https://github.com/powerline/fonts.git'
    dest: /opt/checkout
    version: master
    clone: yes
    update: yes
- name: -安装fronts字体文件-
  shell: sh install.sh
  args:
    chdir: /opt/checkout
- name: -安装vim 插件管理器-
  git:
    repo: 'https://github.com/VundleVim/Vundle.vim.git'
    dest: ~/.vim/bundle/Vundle.vim
    version: master
    clone: yes
    update: yes
- name: -安装vim_fugitive插件-
  git:
    repo: 'https://github.com/tpope/vim-fugitive.git'
    dest: ~/.vim/bundle/vim-fugitive
    version: master
    clone: yes
    update: yes
- name: -安装Molokai color scheme for vim-
  git:
    repo: 'https://github.com/tomasr/molokai.git'
    dest: ~/.vim/colors
    version: master
    clone: yes
- name: -字体主题插件拷贝-
  copy:
    src: ~/.vim/colors/colors/molokai.vim
    dest: ~/.vim/colors/molokai.vim

- name: -下载fuzzy finder-
  git:
    repo: 'https://github.com/junegunn/fzf.git'
    dest: ~/.fzf
    version: master
    clone: yes
- name: -安装fuzzy finder-
  shell: ./install --all
  args:
    chdir: ~/.fzf
    executable: /bin/bash
- name: -拷贝vimrc模板文件-
  template:
    src: "{{ item }}"
    dest: ~/.vimrc
    mode: u=rw,g=r,o=r
  loop: "{{ query('first_found', { 'files': myfiles, 'paths': mypaths}) }}"
  vars:
    myfiles:
      - "{{ ansible_distribution}}{{ansible_distribution_major_version }}_vimrc.j2"
      -  default_vimrc.j2
    mypaths: ['/etc/ansible/roles/vim/templates/']
- name: 初始化vimrc配置文件
  shell: vim +PluginInstall +qall

- block:
  - name: 安装go语言
    unarchive:
      src: https://dl.google.com/go/go{{ go_version }}.linux-amd64.tar.gz
      dest: /usr/local
      remote_src: yes
  - name: 初始化go环境
    lineinfile:
      path: /etc/profile
      line: 'PATH=$PATH:/usr/local/go/bin'
      create: yes
      state: present
  when: build_params.find('go') != -1

- name: 安装YouCompleteMe插件
  shell: "git submodule update --init --recursive && ./install.sh {{ build_params}}"
  args:
    chdir: ~/.vim/bundle/YouCompleteMe
- name: 拷贝YCM额外配置文件
  copy:
    src: global_extra_conf.py
    dest: ~/global_extra_conf.py
    mode: 0644
- name: 安装bash powerline 插件
  pip:
    name: powerline-status
    state: present
- name: 初始化powerline
  blockinfile:
    path: /etc/profile
    block: | 
      powerline-daemon -q
      POWERLINE_BASH_CONTINUATION=1
      POWERLINE_BASH_SELECT=1
      . /usr/local/lib/{{ powerline_python_version }}/site-packages/powerline/bindings/bash/powerline.sh
- name: women
  blockinfile:
      block: | 
        echo 4
